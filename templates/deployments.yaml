apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name}}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }} 
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }} 
    spec:
      restartPolicy: {{ .Values.restartPolicy }}
      initContainers:
      - name: {{ .Values.initcontainer.name }}
        image: {{ .Values.initcontainer.image }}:{{ .Values.initcontainer.tag }}
        imagePullPolicy: {{ .Values.initcontainer.imagePullPolicy }}
        env:
        - name: FLYWAY_URL
          valueFrom:
            configMapKeyRef:
              name: {{.Values.name}}-configmap
              key: flyway_url
        - name: FLYWAY_USER
          valueFrom:
            configMapKeyRef:
              name: {{.Values.name}}-configmap
              key: flyway_user
        - name: FLYWAY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{.Values.name}}-db-secrets
              key: flyway_password
        - name: FLYWAY_DEFAULT_SCHEMA
          valueFrom:
            configMapKeyRef:
              name: {{.Values.name}}-configmap
              key: flyway_schema
        resources:
          requests:
            cpu: "50m"
            memory: "100Mi"
          limits:
            cpu: "100m"
            memory: "200Mi"

      containers:
      - name: {{ .Values.container.name }}
        image: {{ .Values.container.image }}:{{ .Values.container.tag }}
        imagePullPolicy: {{ .Values.container.imagePullPolicy }}
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 2

        env:
          - name: HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.name }}-configmap
                key: host
          - name: USER
            valueFrom:
              configMapKeyRef:
                name: {{.Values.name}}-configmap
                key: flyway_user
          - name: PWD
            valueFrom:
              secretKeyRef:
                name: {{.Values.name}}-db-secrets
                key: flyway_password
          - name: DB
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.name }}-configmap
                key: db
          - name: PORT
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.name }}-configmap
                key: db_port
          - name: BROKERS
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.name }}-configmap
                key: brokers
          - name: TOPIC
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.name }}-configmap
                key: topic
          - name: GROUP
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.name }}-configmap
                key: group_id
        resources:
          requests:
            cpu: "200m"
            memory: "350Mi"
          limits:
            cpu: "400m"
            memory: "600Mi"

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: {{ .Values.name }} 
              topologyKey: topology.kubernetes.io/zone

      imagePullSecrets:
      - name: {{ .Values.name }}-pull-secrets
